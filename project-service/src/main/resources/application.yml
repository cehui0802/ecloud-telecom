spring:
  datasource:
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    #jdbc:dm://114.116.105.140:5236
    url: ${DB_URL:jdbc:p6spy:dm://124.70.80.155:5236}
    username: ${DB_USER:OA_SINGLE_SIT}
    password: Qwertyuiop1234
    dbType: dmsql
 # 若使用activemq 则需设置，默认直接使用的Redis做的mq
#  activemq:
#    broker-url: tcp://127.0.0.1:61616
#    in-memory: false
#    packages:
#      trust-all: true
  # Redis 配置
  redis:
    host: ${REDIS_HOST:114.116.8.20}
    password: Qwas1212
    port: ${REDIS_PORT:30890}
    database: ${REDIS_DB:5}
  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 100MB
# 分布式Session共享配置
  session:
    # 会话时长(单位：秒)
    timeout: 1800
    #session存储类型  none , redis，分布式下请使用Redis
    store-type: none
    redis:
      namespace: ecloud:session



logging:
  level:
    root: info
    cn:
      gwssi: DEBUG
server:
  servlet:
    context-path: ${CONTEXT_PATH:/}



## ecloud 的相关配置
ecloud:
  ## 是否开启JWT
  jwt:
    enabled: true
    header: Authorization
      #鉴权
  security:
    ## 忽略鉴权的URL
    auth-ingores: /login.*,/ui/*,/eworker-ui-micro/*,/index.html,/swagger-*,/v2/api-docs*,/org/wx/login,/org/wx/bindUser,/webjars/*,/org/user/getCurrentUserInfo,/org/logout,/openapi/*,/sys/sysProperties/getLoginTypePropertyByAlias
    ## 忽略防盗链的URL 
    csrf-ingores: 127.0.0.1,localhost,192.168.,data-designer.ecloud.work,
    ## 忽略sso校验的URL
    sso-ingores:
    ## 最大session数量
    maximum-sessions: -1
  ## 邮箱发送者的配置
  mail:
    mail-address: ecloudBPM@qq.com
    nick-name: ecloudBPM
    password: ecloudBPM
    send-host: smtp.qq.com
    send-port: 465
    ssl: true
#  simple-mq:
  ## mq 队列配置：redis ：使用Redis做队列；synchronous: 同步，不使用队列；jms: activemq作为队列 ROCKET：使用rocketmq做队列
#    name: ${SIMPLE-MQ-NAME:single-message-boot}
#    message-queue-type: ROCKET
#    rocket-consumer:
#      consumer-group:  ${SIMPLE-MQ-GROUP:ecloud-oa-single-boot}
#      sub-expression: email || inner || sms || mobile || log
  ## 缓存配置 memory 内存，Redis，二级缓存 j2cache
  cache:
    type: j2cache
  ## @ABScheduled 定时计划是否开启
  schedule:
    enable: false
  ## groovy 引擎黑名单关键词，防止执行危险脚本
  groovy: 
    blackKeywords: System,Runtime,BeanUtil,JdbcTemplate,FileUtil,InputStream,IoUtil,FileWriter,ReflectUtil,ClassUtil
  # 使用时需要在引入maven 依赖 ecloudBPM-component-ldap
#  ldap:
#    server: ldap://127.0.0.1:10389/dc=ecloudBPM,dc=cn
#    manager-d-n: uid=admin,ou=system
#    manager-password: secret
#    authentication-type: simple
  ## 上传配置： db 存数据库 ；ordinary 存本地磁盘，需要配置 uploader.ordinary.path存储目录。  具体请看 IUploader 实现类
  uploader:
    default: db
    minio:
      endpoint: https://minio.ecloud.work/
      accessKey: AKIAIOSFODNN7EXAMPLE
      secretKey: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
      bucket: ecloudbpm
      path: /test/halo/
  common-column:
    createUser: create_by
    createTime: create_time
    updateUser: update_by
    updateTime: update_time
  log:
    mq:
      enabled: false
    dataSource:
      dbAlias: dmsql
      dbType: dmsql
  sso:
    enable: false
    # bamboo
    type: bamboo
    bamboo:
      code-key: code
      access-token: access_token
      refresh-token: refresh_token
      url: http://39.106.223.190:8080/idp
      client-id: oa
      client-secret: b39769cc8be5462cbe5c44c008efdbac
      ##获取token地址
      get-token-url: ${ecloud.sso.bamboo.url}/oauth2/getToken
      refresh-token-url: ${ecloud.sso.bamboo.url}/oauth2/refreshToken
      get-token-info-url: ${ecloud.sso.bamboo.url}/oauth2/getTokenInfo
      revoke-token-url: ${ecloud.sso.bamboo.url}/oauth2/revokeToken
      check-token-valid-url: ${ecloud.sso.bamboo.url}/oauth2/checkTokenValid
      get-user-info-url: ${ecloud.sso.bamboo.url}/oauth2/getUserInfo
## 二级缓存配置
j2cache:
  serialization: java
  default-cache-null-object: true
  sync-ttl-to-redis: true
  L1:
    provider-class: caffeine
    region:
      default: 1000, 12h
      # jwt token default period of validity
      jwtToken: 1000, 30m
               # 微信 Access Token 默认有效期（移动端整合微信使用）
      WX_ACCESS_TOKEN: 1, 2h
  L2:
    cache-open: true
    provider-class: net.oschina.j2cache.cache.support.redis.SpringRedisProvider
    storage: generic
    channel: j2cache
  broadcast:
    cache-clean-mode: blend
    provider-class: net.oschina.j2cache.cache.support.redis.SpringRedisPubSubPolicy




